TODO
V Put process in background & independent on ssh login
V Evaluate 1 vs 2 rec processes
- Encapsulate recording command in script (correct rec folder also)
- Evaluate need for process control (health check, cron, restart etc)
- Evaluate if processing recordings can be done multitask or if recording process needs to be shut down
- Test if timing information is lost for smaller silence times for file splitting
- Write processing for raw recordings (normalize, fade in/out, format conversion, timestamp names, compression)
- Test if sox can produce signal when it has captured a recording; for processing stage to initialize its operation
- Set up nightly e-mail reporting
- Create readable logging process

- Decide which effect pedals to use/buy
- Decide which headphone to use/buy
- Buy case for pi
- Evaluate need for battery pack to continue operations during blackout
- Test how long silent guitar batteries last
- Decide if power adapter or rechargable batteries is/are needed for silent guitar
- Decide how to encase recording solution as to minimize light pollution at night
- Decide if 6-socket power is wanted for bedside (recording solution + other appliances)


===

Current command:
rec -c1 -r44100 -b16 muzmachine.wav silence 1 0.1 0.015% 1 6.0 0.015% : newfile : restart

Nohup with stout/stderr to /dev/null (deny nohup.out)
nohup rec -c1 -r44100 -b16 muzmachine.wav silence 1 0.1 0.012% 1 6.0 0.012% : newfile : restart > /dev/null 2>&1 $

===

Process in background:
https://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session

Options:
- nohup
- bg + disown
- screen
- tmux

1. Nohup
- Find way to run two nohup recordings from 1 script

===

